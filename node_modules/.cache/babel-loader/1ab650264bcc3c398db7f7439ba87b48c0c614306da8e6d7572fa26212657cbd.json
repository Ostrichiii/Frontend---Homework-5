{"ast":null,"code":"import mockData from\"./data.json\";const useMock=process.env.REACT_APP_USE_MOCK===\"true\";const API_URL=process.env.REACT_APP_API_URL;const mockResponse=data=>new Promise(resolve=>setTimeout(()=>resolve(data),300));const apiRequest=async function(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const response=await fetch(url,options);if(!response.ok){throw new Error(`Error ${response.status}: ${response.statusText}`);}return response.json();};export const getShoppingLists=async()=>{return useMock?mockResponse(mockData.shoppingLists):apiRequest(`${API_URL}/shoppingList/list`);};export const getShoppingListById=async id=>{return useMock?mockResponse(mockData.shoppingLists.find(list=>list.id===parseInt(id,10))||Promise.reject(new Error(\"Shopping list not found\"))):apiRequest(`${API_URL}/shoppingList/get/${id}`);};export const createShoppingList=async newList=>{if(useMock){const newId=mockData.shoppingLists.length+1;const createdList={id:newId,...newList};mockData.shoppingLists.push(createdList);return mockResponse(createdList);}return apiRequest(`${API_URL}/shoppingList/create`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newList)});};export const updateShoppingList=async(id,updatedData)=>{if(useMock){const list=mockData.shoppingLists.find(list=>list.id===parseInt(id,10));if(!list)throw new Error(\"Shopping list not found\");Object.assign(list,updatedData);return mockResponse(list);}return apiRequest(`${API_URL}/shoppingList/update/${id}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(updatedData)});};export const deleteShoppingList=async id=>{if(useMock){const index=mockData.shoppingLists.findIndex(list=>list.id===parseInt(id,10));if(index===-1)throw new Error(\"Shopping list not found\");mockData.shoppingLists.splice(index,1);return mockResponse({message:\"Shopping list deleted\"});}return apiRequest(`${API_URL}/shoppingList/delete/${id}`,{method:\"DELETE\"});};","map":{"version":3,"names":["mockData","useMock","process","env","REACT_APP_USE_MOCK","API_URL","REACT_APP_API_URL","mockResponse","data","Promise","resolve","setTimeout","apiRequest","url","options","arguments","length","undefined","response","fetch","ok","Error","status","statusText","json","getShoppingLists","shoppingLists","getShoppingListById","id","find","list","parseInt","reject","createShoppingList","newList","newId","createdList","push","method","headers","body","JSON","stringify","updateShoppingList","updatedData","Object","assign","deleteShoppingList","index","findIndex","splice","message"],"sources":["/Users/zdenek/Desktop/STUDY/Unicorn/5 semester/Frontend/Homework5/dom-c-kol-5-Ostrichiii/src/api.js"],"sourcesContent":["import mockData from \"./data.json\";\n\nconst useMock = process.env.REACT_APP_USE_MOCK === \"true\";\nconst API_URL = process.env.REACT_APP_API_URL;\n\n\nconst mockResponse = (data) =>\n  new Promise((resolve) => setTimeout(() => resolve(data), 300));\n\n\nconst apiRequest = async (url, options = {}) => {\n  const response = await fetch(url, options);\n  if (!response.ok) {\n    throw new Error(`Error ${response.status}: ${response.statusText}`);\n  }\n  return response.json();\n};\n\n\nexport const getShoppingLists = async () => {\n  return useMock\n    ? mockResponse(mockData.shoppingLists)\n    : apiRequest(`${API_URL}/shoppingList/list`);\n};\n\n\nexport const getShoppingListById = async (id) => {\n  return useMock\n    ? mockResponse(\n        mockData.shoppingLists.find((list) => list.id === parseInt(id, 10)) ||\n          Promise.reject(new Error(\"Shopping list not found\"))\n      )\n    : apiRequest(`${API_URL}/shoppingList/get/${id}`);\n};\n\n\nexport const createShoppingList = async (newList) => {\n  if (useMock) {\n    const newId = mockData.shoppingLists.length + 1;\n    const createdList = { id: newId, ...newList };\n    mockData.shoppingLists.push(createdList);\n    return mockResponse(createdList);\n  }\n  return apiRequest(`${API_URL}/shoppingList/create`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(newList),\n  });\n};\n\n\nexport const updateShoppingList = async (id, updatedData) => {\n  if (useMock) {\n    const list = mockData.shoppingLists.find((list) => list.id === parseInt(id, 10));\n    if (!list) throw new Error(\"Shopping list not found\");\n    Object.assign(list, updatedData);\n    return mockResponse(list);\n  }\n  return apiRequest(`${API_URL}/shoppingList/update/${id}`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(updatedData),\n  });\n};\n\n\nexport const deleteShoppingList = async (id) => {\n  if (useMock) {\n    const index = mockData.shoppingLists.findIndex((list) => list.id === parseInt(id, 10));\n    if (index === -1) throw new Error(\"Shopping list not found\");\n    mockData.shoppingLists.splice(index, 1);\n    return mockResponse({ message: \"Shopping list deleted\" });\n  }\n  return apiRequest(`${API_URL}/shoppingList/delete/${id}`, {\n    method: \"DELETE\",\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}